play {
  crypto.secret = "changeme"
  i18n.langs = [ "en" ]

  evolutions {
    # Whether evolutions are enabled
    enabled = true

    # Whether evolution updates should be performed with autocommit or in a manually managed transaction
    autocommit = true

    # Whether locks should be used when apply evolutions.  If this is true, a locks table will be created, and will
    # be used to synchronise between multiple Play instances trying to apply evolutions.  Set this to true in a multi
    # node environment.
    useLocks = false

    # Whether evolutions should be automatically applied.  In prod mode, this will only apply ups, in dev mode, it will
    # cause both ups and downs to be automatically applied.
    autoApply = true

    # Whether downs should be automatically applied.  This must be used in combination with autoApply, and only applies
    # to prod mode.
    autoApplyDowns = true
  }

  db {
    default = {
      # HikariCP configuration options
      # HikariCP configuration options
      hikaricp {
        #
        #        # The datasource class name, if not using a URL
        #        dataSourceClassName = null
        #
        #        # Data source configuration options
        #        dataSource {
        #        }
        #
        #        # Whether autocommit should be used
        #        autoCommit = true
        #
        #        # The connection timeout
        #        connectionTimeout = 30 seconds
        #
        #        # The idle timeout
        #        idleTimeout = 10 minutes
        #
        #        # The max lifetime of a connection
        #        maxLifetime = 30 minutes
        #
        #        # If non null, the query that should be used to test connections
        #        connectionTestQuery = null
        #
        #        # If non null, sets the minimum number of idle connections to maintain.
        #        minimumIdle = null
        #
        #        # The maximum number of connections to make.
        #        maximumPoolSize = 10
        #
        #        # If non null, sets the name of the connection pool. Primarily used for stats reporting.
        #        poolName = null
        #
        #        # Sets whether or not construction of the pool should fail if the minimum number of connections
        #        # coludn't be created.
        #        initializationFailFast = true
        #
        #        # Sets whether internal queries should be isolated
        #        isolateInternalQueries = false
        #
        #        # Sets whether pool suspension is allowed.  There is a performance impact to enabling it.
        #        allowPoolSuspension = false
        #
        #        # Sets whether connections should be read only
        #        readOnly = false
        #
        #        # Sets whether mbeans should be registered
        #        registerMbeans = false
        #
        #        # If non null, sets the catalog that should be used on connections
        #        catalog = null
        #
        #        # If non null, sets the transaction isolation level
        #        transactionIsolation = null
        #
        #        # The validation timeout to use
        #        validationTimeout = 5 seconds
        #
        #        # If non null, sets the threshold for the amount of time that a connection has been out of the pool before it is
        #        # considered to have leaked
        #        leakDetectionThreshold = null
      }
    }
  }
}

slick.dbs {
  default {
    driver="slick.driver.MySQLDriver$"
    db {
      driver="com.mysql.jdbc.Driver"
      url="jdbc:mysql://127.0.0.1:5306/seien_test?characterEncoding=UTF8&rewriteBatchedStatements=true&zeroDateTimeBehavior=convertToNull"
      user="seien_user"
      password="seien_password"
      // The number of concurrent threads in the thread pool for asynchronous execution of database actions.
      // See the HikariCP wiki for more imformation about sizing the thread pool correctly.
      // Note that for asynchronous execution in Slick you should tune the thread pool size (this parameter) accordingly instead of the maximum connection pool size.
      numThreads=2
    }
  }
}
